//analyzeTestClassesDependencies.enabled = false

dependencies {
    testCompile project(':server:core:web')
    testCompile "com.google.guava:guava:$rootProject.guavaVersion"
    testCompile "com.spotify:docker-client:$rootProject.dockerClientVersion"
    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.assertj:assertj-core:$rootProject.assertjVersion"
    testCompile "io.rest-assured:rest-assured:$rootProject.restassuredVersion"
    testCompile "io.rest-assured:json-path:$rootProject.restassuredVersion"
    testCompile "org.awaitility:awaitility:$rootProject.awaitilityVersion"
    testCompile "io.dropwizard:dropwizard-testing:$rootProject.dropwizardVersion"
    testCompile 'com.xebialabs.restito:restito:0.9.3'
}

sourceSets {
    // Note that just declaring this sourceset creates two configurations.
    componentTests {
        java {
            srcDir 'src/component-test/java'
        }
        resources {
            srcDir 'src/component-test/resources'
        }
        //compileClasspath += sourceSets.main.runtimeClasspath
    }
}

configurations {
    componentTestsCompile.extendsFrom testCompile
    componentTestsRuntime.extendsFrom testRuntime
}

task componentTest(type: Test, dependsOn: componentTestsClasses) {
    description = "Runs component tests (located in src/component-test/...)."
    testClassesDir = project.sourceSets.componentTests.output.classesDir
    classpath = project.sourceSets.componentTests.runtimeClasspath
}

check.dependsOn componentTest

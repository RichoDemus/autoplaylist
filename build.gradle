apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.google.osdetector'
apply plugin: 'com.github.ben-manes.versions'

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

defaultTasks 'check'

subprojects {
    apply plugin: 'java'
    apply plugin: 'ca.cutterslade.analyze'
    apply from: "$rootProject.projectDir/dependencies.gradle"
    repositories {
        jcenter()
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:all" << "-Werror"
        }
    }
}

buildscript {
    apply from: "$rootProject.projectDir/dependencies.gradle"
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:$rootProject.gradleVersionsPluginVersion"
        classpath "ca.cutterslade.gradle:gradle-dependency-analyze:$rootProject.gradleDependencyAnalyzePluginVersion"
        classpath "com.bmuschko:gradle-docker-plugin:$rootProject.gradleDockerPluginVersion"
        classpath "com.google.gradle:osdetector-gradle-plugin:$rootProject.osdetectorGradlePluginVersion"
    }
}

task buildImage(type: DockerBuildImage) {
    println 'This is the buildImage task in the root project'
    switch(osdetector.arch) {
        case 'x86_64':
            println "You have an 64b processor"
            dockerFile = file('./Dockerfile')
            break
        case 'arm_32':
            println "You have an arm processor"
            dockerFile = file('./Dockerfile_arm')
            break

        default:
            println "Unrecognized architechture: $osdetector.arch"
            throw new GradleException("Unrecognized architechture: $osdetector.arch")
        break

    }
    inputDir = file('.')
    tag = 'richodemus/reader:latest'
}

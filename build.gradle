apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.google.osdetector'

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

defaultTasks 'build'

allprojects {
    apply plugin: 'com.github.ben-manes.versions'
    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'ca.cutterslade.analyze'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:${project.property('gradle-versions-plugin.version')}"
        classpath "ca.cutterslade.gradle:gradle-dependency-analyze:${project.property('gradle-dependency-analyze-plugin.version')}"
        classpath "com.bmuschko:gradle-docker-plugin:${project.property('gradle-docker-plugin.version')}"
        classpath "com.google.gradle:osdetector-gradle-plugin:${project.property('osdetector-gradle-plugin.version')}"
    }
}

task buildImage(type: DockerBuildImage) {
    switch(osdetector.arch) {
        case 'x86_64':
            println "You have an 64b processor"
            dockerFile = new File('./Dockerfile')
            break
        case 'arm_32':
            println "You have an arm processor"
            dockerFile = new File('./Dockerfile_arm')
            break

        default:
            println "Unrecognized architechture: $osdetector.arch"
            throw new GradleException("Unrecognized architechture: $osdetector.arch")
        break

    }
    inputDir = new File('.')
    tag = 'richodemus/reader:latest'
}

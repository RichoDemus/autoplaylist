import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

apply plugin: 'kotlin'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'ca.cutterslade.analyze'
apply plugin: 'com.google.osdetector'
apply plugin: 'com.bmuschko.docker-remote-api'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.jetbrains.kotlin:kotlin-runtime:1.0.1-2'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.1-2'
    compile 'io.dropwizard:dropwizard-core:0.9.2'
    compile 'io.dropwizard:dropwizard-jersey:0.9.2'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'com.google.guava:guava:18.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.4.1'
}

repositories {
    jcenter()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.1-2'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.0.3'
    }
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into 'build/dependencies'
}

build.finalizedBy(copyDependencies)

task buildImage(type: DockerBuildImage) {
    switch(osdetector.arch) {
        case 'x86_64':
            println "You have an 64b processor"
            dockerFile = new File("youtube-mock/Dockerfile")
            break
        case 'arm_32':
            println "You have an arm processor"
            dockerFile = new File('./Dockerfile_arm')
            break

        default:
            println "Unrecognized architechture: $osdetector.arch"
            throw new GradleException("Unrecognized architechture: $osdetector.arch")
        break

    }
    inputDir = new File('youtube-mock')
    tag = 'richodemus/youtubemock:latest'
}

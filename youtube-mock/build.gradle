import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

apply plugin: 'kotlin'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'ca.cutterslade.analyze'
apply plugin: 'com.google.osdetector'
apply plugin: 'com.bmuschko.docker-remote-api'

dependencies {
    compile "org.slf4j:slf4j-api:${project.property('slf4j.version')}"
    compile "org.jetbrains.kotlin:kotlin-runtime:${project.property('kotlin.version')}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:${project.property('kotlin.version')}"
    compile "io.dropwizard:dropwizard-core:${project.property('dropwizard.version')}"
    compile "io.dropwizard:dropwizard-jersey:${project.property('dropwizard.version')}"
    compile "javax.ws.rs:javax.ws.rs-api:${project.property('javax-ws-rs-api.version')}"
    compile "com.google.guava:guava:${project.property('guava.version')}"

    testCompile "junit:junit:${project.property('junit.version')}"
    testCompile "org.assertj:assertj-core:${project.property('assertj.version')}"
}

repositories {
    jcenter()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.property('kotlin.version')}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${project.property('gradle-versions-plugin.version')}"
        classpath "ca.cutterslade.gradle:gradle-dependency-analyze:${project.property('gradle-dependency-analyze-plugin.version')}"
    }
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into 'build/dependencies'
}

build.finalizedBy(copyDependencies)

task buildImage(type: DockerBuildImage) {
    switch(osdetector.arch) {
        case 'x86_64':
            println "You have an 64b processor"
            dockerFile = file("./Dockerfile")
            break
        case 'arm_32':
            println "You have an arm processor"
            dockerFile = file('./Dockerfile_arm')
            break

        default:
            println "Unrecognized architechture: $osdetector.arch"
            throw new GradleException("Unrecognized architechture: $osdetector.arch")
        break

    }
    inputDir = file('.')
    tag = 'richodemus/youtubemock:latest'
}
